package  {		import flash.display.Sprite;	import flash.utils.Timer;	import flash.events.TimerEvent;			public class Twig {				// Twig is an object made of branches strung together, separated by 		// Nodes				public var branchesArray:Array; // store branches (at least one)		public var startEdge:String;		public var startX:uint; // starting X position (where it enters from edge)		public var startY:uint; // starting Y position		public var zOrder:uint; // store z-order		public var nodesMax:uint; // max number of nodes for this Twig		public var hueRange:Array(); // a min and max multiplier for hues		private var _twigTimer:Timer();		public function Twig extends Sprite() {			// generate new Twig at a point along one of the available edges						startEdge = GROWING_EDGES[randomRange(0, GROWING_EDGES.length())];			switch (startEdge) {				case 'TOP':					startY = 0;					startX = randomRange(0, stage.width-300); // give it room to grow						break;								case 'LEFT':					startY = randomRange(0, stage.height-300);					startX = 0;					break;								// handle more cases later....			}						// give it a Z-Order			// zOrder = randomRange(1, MAX_TWIGS); not using yet						// tell it how many nodes it can have			nodesMax = randomRange(MIN_TWIG_NODES, MAX_TWIG_NODES);						// give it a hue range			//hueRange = []; .... TODO 									// add an initial branch			initialBranch = new Branch(startX, startY);									branchesArray.push(initialBranch);									// start a Timer for adding more nodes and branches			_twigTimer = new Timer(MIN_NODE_DELAY*1000, _nodeCreatorTest);					}import flash.display.Sprite;	}			class TwigSection extends Sprite () {			}}