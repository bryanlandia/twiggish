package  {		import flash.display.Sprite;	import com.senocular.drawing.Path;	import woollyyyy.utils.*;	import flash.events.Event;	import com.greensock.motionPaths.PathFollower;		internal final class TwigSection extends Sprite {				public var startX:Number;		public var startY:Number;		public var endX:Number;		public var endY:Number;		public var curveControlX:int;		public var curveControlY:int;		public var path:Path;		public var drawSpeed:Number = 0.075;		public var position:Number;		public var lineWidth:Number;		public var startPosWidthFactor:Number;		public var lineAlpha:Number;						public function TwigSection(startX:Number, startY:Number) {			//trace('making a new TwigSection');			this.startX = startX;			this.startY = startY;			startPosWidthFactor = (5000/this.startX/10);			_init();			addEventListener(Event.ENTER_FRAME, _drawPath);					}				private function _init(e:Event = null):void {						// redraw a line til we have a complete curve. Set up the full path here.			//lineWidth = 3*Math.random();			endX = randomRange(-10, 70) + this.startX;			endY = randomRange(-10, 50) + this.startY;			curveControlX = randomRange(-15, 15) + (startX + endX)/2;			curveControlY = randomRange(-15, 15) + (startY + endY)/2;				position = 0;			path = new Path();						with (path) {				moveTo(this.startX, this.startY);				curveTo(curveControlX, curveControlY, endX, endY);			}			}				private function _drawPath(e:Event):void {			//graphics.clear();						lineAlpha = Twig(parent.parent.parent).twigAlpha;					trace(lineAlpha);						lineWidth = 10*Math.random()*(1-position);			graphics.lineStyle(lineWidth, 0x333333, lineAlpha);			path.draw(graphics, 0, position += drawSpeed);						if (position >=1) {				graphics.lineStyle(15*Math.random()*0.5, 0x333333, lineAlpha);				path.draw(graphics); //default params draws full path				removeEventListener(Event.ENTER_FRAME, _drawPath);			}		}	}	}