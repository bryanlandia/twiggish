package  {		import flash.display.Sprite;	import flash.display.Shape;	/*import fl.transitions.Tween;	import fl.transitions.easing.*;	import fl.transitions.TweenEvent; */	import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import woollyyyy.utils.*;				internal final class NodeDisc extends Sprite {				internal var ellWidth:Number;		internal var ellHeight:Number;		internal var discShape:Sprite;				public function NodeDisc(startX:Number, startY:Number) {							// how far along the Twig are we?  TODO we'll specify the size based on how far down twig			// var twigNodePosition = 						// draw an ellipse in a new Shape			var discShape= new Sprite();			with (discShape.graphics) {				lineStyle(Math.random()*1, 0x666666, 0.7);				beginFill(Math.random()*0x442222, Math.random()-0.1);				ellWidth = ellHeight = Math.ceil(randomRange(5,100)*(startX/1024));				//ellHeight = randomRange(5,8);				drawEllipse(startX-ellWidth/2, startY-ellWidth/2, ellWidth, ellHeight);				endFill();			}						//discShape.scaleX = discShape.scaleY = 0.01;						TweenPlugin.activate([TintPlugin]);			addChild(discShape);						//_growDisc(discShape);			_fadeDisc(discShape);		}				private function _growDisc(obj:Sprite):void {			// attach a Tween instance to the circle and tween up the scale			trace('my shape is '+ obj.width + 'px wide and '+ obj.height + 'px high');			//var myTweenX:Tween = new Tween(shape, "width", Strong.easeOut, 0, 100, 6, true);			//var myTweenY:Tween = new Tween(shape, "height", Strong.easeOut, 0, 100, 6, true);			TweenLite.to(obj, 6, {scaleX:1, scaleY:1, ease:Elastic.easeOut});		}						private function _fadeDisc(obj:Sprite):void {			//Tween the color toward brown/gray as the Disc ages			TweenLite.to(obj, 50, {tint:0xaaaaaa, onComplete:_floatDiscOffScreen});		}				private function _floatDiscOffScreen():void {			var offStageY:int = -1*(Forest.instance.stage.stageHeight + 400);			TweenLite.to(this, 10*Math.random(), {y:offStageY, onComplete:_cleanUpNodeDisc});		}				private function _cleanUpNodeDisc():void {			//parent.disc = null;			dispatchEvent(new TwiggishEvent(TwiggishEvent.NODE_DISC_REMOVED));			parent.removeChild(this);					}			}	}