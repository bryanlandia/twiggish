package {		import flash.display.Sprite;	import flash.utils.Timer;    import flash.events.TimerEvent;	import woollyyyy.utils.*;	public final class Forest extends Sprite {		// Document class		// A Forest generates Twigs. 		private static var _instance:Forest;		public static function get instance():Forest{ return _instance; }		// debug mode on or off		static const DEBUG_MODE:Boolean = false		// minimum seconds until new twig generated		static const MIN_TWIG_DELAY:uint = 1 //5				static const MIN_NODE_DELAY:uint = 1						// how Twiggy we want it; i.e., percentage chance of generating a new Twig		static const TWIG_LIKELIHOOD:Number = 0.5				static const NODE_LIKELIHOOD:Number = 0.5				// how much branching we want (node makes branches vs. just section)		static const BRANCHING_LIKELIHOOD:Number = 0.7 //0.25				// how many Twigs total we'll allow.  Old Twigs will then have to die to 		// allow new ones to be created		static const MAX_TWIGS:uint = 33				// how many nodes Twigs will allow		static const MIN_TWIG_NODES:uint = 5		static const MAX_TWIG_NODES:uint = 20 //25				// edges available to grow new twigs		static const GROWING_EDGES:Array = ['TOP', 'LEFT']; //, 'BOTTOM', 'RIGHT']						// eventually, scroll the Stage right to left to reveal more		//const SCROLL_RATE = 						// how close in pixels we'll allow Twigs to get to each other		static const TWIG_PROXIMITY:uint = 2				private var _forestTimer:Timer;		public var twigsArray:Array;						public function Forest() {					 	_instance = this;							// create a new Array to store Twigs we'll create			twigsArray = new Array();						// create a Timer to handle adding Twigs			_configureForestTimer();			_forestTimer.start();					}		private function _twigCreatorTest(e:TimerEvent): void {			// randomly determine whether or not to create a new Twig			if (twigsArray.length < MAX_TWIGS && Math.random() >= TWIG_LIKELIHOOD) {				var twig = _addTwigToForest();			}			else if (twigsArray.length == MAX_TWIGS) {				// we no longer remove the event listener since we want to be able to 				// create new Twigs as space becomes available in the array.				//_forestTimer.removeEventListener(TimerEvent.TIMER, _twigCreatorTest);			}		}			private function _configureForestTimer(): void {			// every x seconds, see if we want to create a new Twig at this time			_forestTimer = new Timer(MIN_TWIG_DELAY * 1000);			_forestTimer.addEventListener(TimerEvent.TIMER, _twigCreatorTest);		}				private function _addTwigToForest(): Twig {						var twig = new Twig();			//trace('twig has '+twig.numChildren+' children');			instance.addChild(twig);			twigsArray.push(twig);			return twig;		}						}	}